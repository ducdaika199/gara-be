
> gara-service@0.0.6 test
> PRETTY_PRINT=true jest --forceExit --verbose=true --runInBand

global-setup: 11.144ms
  console.log
    check call function

      at startWebServer (entry-points/api/server.ts:17:11)

[1706256353541] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mcheck call function[39m
[1706256353542] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mServer is about to listen to port 0[39m
FAIL test/add-order.test.ts (3.053 s)
  /api
    POST /orders
      ‚úï When adding a new valid order, Then should get back approval with 200 response (45 ms)
      ‚úï When adding a new valid order, Then should be able to retrieve it (7 ms)
      ‚úï When adding an order without specifying product, stop and return 400 (4 ms)
      ‚úì When the user does not exist, return 404 response (4 ms)
      ‚úé todo When a new order failed, an invalid-order error was handled
      ‚úé todo When a new valid order was added, then order-added metric was fired
      ‚úé todo When the user service is down, then order is still added successfully

  ‚óè /api ‚Ä∫ POST /orders ‚Ä∫ When adding a new valid order, Then should get back approval with 200 response

    expect(received).toMatchObject(expected)

    - Expected  -  3
    + Received  + 11

      Object {
    -   "data": Object {
    -     "id": Any<Number>,
    -   },
    +   "data": "<!DOCTYPE html>
    + <html lang=\"en\">
    + <head>
    + <meta charset=\"utf-8\">
    + <title>Error</title>
    + </head>
    + <body>
    + <pre>Cannot POST /order</pre>
    + </body>
    + </html>
    + ",
      }

      66 |
      67 |       // Assert
    > 68 |       expect(receivedAPIResponse).toMatchObject({
         |                                   ^
      69 |         data: {
      70 |           id: expect.any(Number),
      71 |         },

      at Object.<anonymous> (test/add-order.test.ts:68:35)

  ‚óè /api ‚Ä∫ POST /orders ‚Ä∫ When adding a new valid order, Then should be able to retrieve it

    expect(received).toMatchObject(expected)

    - Expected  -  8
    + Received  + 12

      Object {
    -   "data": Object {
    -     "countryId": 1,
    -     "deliveryAddress": "123 Main St, New York, NY 10001",
    -     "paymentTermsInDays": 30,
    -     "productId": 2,
    -     "userId": 1,
    -   },
    -   "status": 200,
    +   "data": "<!DOCTYPE html>
    + <html lang=\"en\">
    + <head>
    + <meta charset=\"utf-8\">
    + <title>Error</title>
    + </head>
    + <body>
    + <pre>Cannot GET /order/undefined</pre>
    + </body>
    + </html>
    + ",
    +   "status": 404,
      }

       98 |         data,
       99 |         status,
    > 100 |       }).toMatchObject({
          |          ^
      101 |         status: 200,
      102 |         data: {
      103 |           ...orderToAdd,

      at Object.<anonymous> (test/add-order.test.ts:100:10)

  ‚óè /api ‚Ä∫ POST /orders ‚Ä∫ When adding an order without specifying product, stop and return 400

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      119 |
      120 |       // Assert
    > 121 |       expect(orderAddResult.status).toBe(400);
          |                                     ^
      122 |     });
      123 |
      124 |     // Ô∏èÔ∏èÔ∏è‚úÖ Best Practice: Check error handling

      at Object.<anonymous> (test/add-order.test.ts:121:37)

  console.log
    check call function

      at startWebServer (entry-points/api/server.ts:17:11)

[1706256354131] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mcheck call function[39m
[1706256354131] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mServer is about to listen to port 0[39m
FAIL test/get-order.test.ts (0.508 s)
  /api
    GET /order
      ‚úï When asked for an existing order, Then should retrieve it and receive 200 response (23 ms)
      ‚úì When asked for an non-existing order, Then should receive 404 response (2 ms)

  ‚óè /api ‚Ä∫ GET /order ‚Ä∫ When asked for an existing order, Then should retrieve it and receive 200 response

    expect(received).toMatchObject(expected)

    - Expected  -  8
    + Received  + 12

      Object {
    -   "data": Object {
    -     "countryId": 1,
    -     "deliveryAddress": "123 Main St, New York, NY 10001",
    -     "paymentTermsInDays": 30,
    -     "productId": 2,
    -     "userId": 1,
    -   },
    -   "status": 200,
    +   "data": "<!DOCTYPE html>
    + <html lang=\"en\">
    + <head>
    + <meta charset=\"utf-8\">
    + <title>Error</title>
    + </head>
    + <body>
    + <pre>Cannot GET /order/undefined</pre>
    + </body>
    + </html>
    + ",
    +   "status": 404,
      }

      67 |
      68 |       // Assert
    > 69 |       expect(getResponse).toMatchObject({
         |                           ^
      70 |         status: 200,
      71 |         data: {
      72 |           ...orderToAdd,

      at Object.<anonymous> (test/get-order.test.ts:69:27)

  console.log
    check call function

      at startWebServer (entry-points/api/server.ts:17:11)

[1706256354595] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mcheck call function[39m
[1706256354595] [32mINFO[39m (45828 on Investideas-Mac-mini-2.local): [36mServer is about to listen to port 0[39m
PASS test/delete-order.test.ts (0.43 s)
  /api
    DELETE /order
      ‚úì When deleting an existing order, Then it should NOT be retrievable (12 ms)

---------------------------------|---------|----------|---------|---------|-------------------------
File                             | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s       
---------------------------------|---------|----------|---------|---------|-------------------------
All files                        |   57.22 |      100 |   30.43 |   57.22 |                         
 gara-service                    |     100 |      100 |     100 |     100 |                         
  config.ts                      |     100 |      100 |     100 |     100 |                         
 gara-service/data-access        |   53.65 |      100 |       0 |   53.65 |                         
  order-repository.ts            |   53.65 |      100 |       0 |   53.65 | 17-27,30-33,36-37,40-41 
 gara-service/data-access/models |   37.87 |      100 |       0 |   37.87 |                         
  country-model.ts               |   51.35 |      100 |       0 |   51.35 | 20-37                   
  db-connection.ts               |      20 |      100 |       0 |      20 | 8-35                    
  order-model.ts                 |      40 |      100 |       0 |      40 | 25-60                   
 gara-service/domain             |   37.89 |      100 |       0 |   37.89 |                         
  new-order-use-case.ts          |   44.82 |      100 |       0 |   44.82 | 10-21,24-25,28-29       
  order-schema.ts                |     100 |      100 |     100 |     100 |                         
  order-validators.ts            |   18.51 |      100 |       0 |   18.51 | 6-27                    
  payment-terms-service.ts       |   42.85 |      100 |       0 |   42.85 | 2-5                     
  user-service-client.ts         |   19.04 |      100 |       0 |   19.04 | 5-21                    
 gara-service/entry-points/api   |   63.29 |      100 |     100 |   63.29 |                         
  routes.ts                      |   39.39 |      100 |     100 |   39.39 | 11-21,26-41,46-48,53-62 
  server.ts                      |   80.43 |      100 |     100 |   80.43 | 48,72-88                
 gara-service/test               |   62.79 |      100 |      40 |   62.79 |                         
  test-helpers.ts                |   62.79 |      100 |      40 |   62.79 | 5-14,20-22,24-26        
---------------------------------|---------|----------|---------|---------|-------------------------
Test Suites: 2 failed, 1 passed, 3 total
Tests:       4 failed, 3 todo, 3 passed, 10 total
Snapshots:   0 total
Time:        4.088 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
npm ERR! Lifecycle script `test` failed with error: 
npm ERR! Error: command failed 
npm ERR!   in workspace: gara-service@0.0.6 
npm ERR!   at location: /Users/investideamacminim1/Desktop/Projects/gara-be/services/gara-service 
